require('utils.stdlib').load()

local { DOTS, PLUGINS_DIR, SWAP_DIR } = require('constants')
local { edit } = require('utils.edit')
local path = require('utils.path')
local plugins = require('utils.plugins')

-- -----------------------------------------------------------------------------
-- Settings
-- -----------------------------------------------------------------------------

-- core
vim.g.mapleader = ' '
vim.opt.clipboard = 'unnamedplus'
vim.api.nvim_create_augroup('bsuth', {})

-- casing
vim.opt.ignorecase = true
vim.opt.smartcase = true

-- splitting
vim.opt.splitright = true
vim.opt.splitbelow = true

-- tabs
vim.opt.tabstop = 2
vim.opt.softtabstop = 2
vim.opt.shiftwidth = 2
vim.opt.expandtab = true

-- interface
vim.opt.termguicolors = true
vim.opt.number = false
vim.opt.wrap = false
vim.opt.signcolumn = 'yes'
vim.opt.showmode = false
vim.opt.laststatus = 3
vim.opt.colorcolumn = '80'
vim.cmd('highlight ColorColumn guibg=#585858')

-- performance
vim.g.matchparen_timeout = 10
vim.opt.synmaxcol = 300
vim.opt.updatetime = 300
vim.opt.scrollback = 100000

-- formating
vim.opt.commentstring = '// %s'
vim.opt.formatoptions = 'jcroql'
vim.api.nvim_create_autocmd('FileType', {
  group = 'bsuth',
  pattern = { 'c', 'cpp' },
  -- override comment string for c / cpp (uses `/* ... */` by default)
  command = 'setlocal commentstring=//\\ %s',
})

-- -----------------------------------------------------------------------------
-- Mappings
-- -----------------------------------------------------------------------------

-- vimrc
vim.keymap.set('n', '<leader>ev', () -> edit(path.join(DOTS, 'nvim/lua')))
vim.keymap.set('n', '<leader>sv', () -> vim.cmd('source $MYVIMRC'))

-- write, quit
vim.keymap.set('n', '<c-w>', () -> vim.cmd('write'))
vim.keymap.set('n', '<c-q>', () -> vim.cmd('quit'))

-- clear, refresh search highlighting
vim.keymap.set('n', '<leader>/', ':nohlsearch<cr><c-l>')
vim.keymap.set('n', '<leader>syn', () -> vim.cmd('syntax clear | syntax reset | syntax enable'))

-- toggle number
vim.keymap.set('i', '<c-n>', () -> { vim.wo.number = !vim.wo.number })
vim.keymap.set('n', '<c-n>', () -> { vim.wo.number = !vim.wo.number })
vim.keymap.set('v', '<c-n>', () -> { vim.wo.number = !vim.wo.number })

-- quick links
vim.keymap.set('n', '<leader>root', () -> edit('/'))
vim.keymap.set('n', '<leader>dots', () -> edit(DOTS))
vim.keymap.set('n', '<leader>swap', () -> edit(SWAP_DIR))
vim.keymap.set('n', '<leader>plug', () -> edit(PLUGINS_DIR))

-- remove annoying defaults
vim.keymap.set('n', 'K', () -> nil) -- open manual
vim.keymap.set('n', '<c-z>', () -> nil) -- background neovim

-- -----------------------------------------------------------------------------
-- Plugins / Modules
-- -----------------------------------------------------------------------------

local function load(name) {
  package.loaded[name] = nil -- unset to force reloading
  require(name)
}

-- Neovim requires commands for multiline printing...
-- https://github.com/neovim/neovim/issues/5067
vim.keymap.set('n', '<leader>pu', ':lua require("utils.plugins").update()<cr>')
vim.keymap.set('n', '<leader>pc', ':lua require("utils.plugins").clean()<cr>')

-- core
load('modules.cwd')
load('modules.emacs')
load('modules.format')
load('modules.scratchpad')
load('modules.statusline')
load('modules.sudo')
load('modules.surroundjump')
load('modules.terminal')
load('modules.windows')

load('plugins.dirvish')
load('plugins.lsp')
load('plugins.syntax')
load('plugins.telescope')
load('plugins.utility')
