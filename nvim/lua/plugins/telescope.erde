local plugins = require('utils.plugins')

plugins.use('nvim-lua/plenary.nvim')
plugins.use('nvim-telescope/telescope.nvim')
plugins.use('nvim-telescope/telescope-fzf-native.nvim', {
  init = plugin_path -> print(vim.fn.system('make')),
})

local telescope = require('telescope')
local telescope_actions = require('telescope.actions')
local telescope_action_state = require('telescope.actions.state')
local telescope_builtin = require('telescope.builtin')

-- -----------------------------------------------------------------------------
-- Setup
-- -----------------------------------------------------------------------------

telescope.setup({
  defaults = {
    layout_strategy = 'bottom_pane',
    sorting_strategy = 'ascending',
    layout_config = { height = 0.4 },
    border = false,
    prompt_prefix = '➜ ',
    selection_caret = '  ',
    multi_icon = '·',
    get_status_text = () -> '',
    mappings = {
      i = {
        -- remove default mappings
        ['<C-x>'] = false,
        ['<C-v>'] = false,
        ['<C-t>'] = false,
        ['<C-u>'] = false,
        ['<C-d>'] = false,
        ['<C-f>'] = false,
        ['<C-k>'] = false,
        ['<M-f>'] = false,
        ['<M-k>'] = false,
        ['<C-/>'] = false,
        ['<C-q>'] = false,
        ['<M-q>'] = false,

        ['<c-c>'] = telescope_actions.close,
        ['<c-[>'] = telescope_actions.close,
        ['<esc>'] = telescope_actions.close,

        ['<S-Tab>'] = telescope_actions.move_selection_previous,
        ['<Tab>'] = telescope_actions.move_selection_next,
        ['<up>'] = telescope_actions.move_selection_previous,
        ['<down>'] = telescope_actions.move_selection_next,
        ['<c-p>'] = telescope_actions.move_selection_previous,
        ['<c-n>'] = telescope_actions.move_selection_next,

        ['<c-space>'] = telescope_actions.toggle_selection,
        ['<m-space>'] = telescope_actions.toggle_all,

        ['<cr>'] = (prompt_buffer, ...) -> {
          local picker = telescope_action_state.get_current_picker(prompt_buffer)
          if #picker:get_multi_selection() > 0 {
            telescope_actions.send_selected_to_qflist(prompt_buffer, ...)
            telescope_actions.open_qflist(prompt_buffer, ...)
          } else {
            telescope_actions.select_default(prompt_buffer, ...)
          }
        },
      },
    },
  },
  pickers = {
    buffers = {
      mappings = {
        i = {
          ['<c-q>'] = telescope_actions.delete_buffer,
        },
      },
    },
  },
})

telescope.load_extension('fzf')

-- -----------------------------------------------------------------------------
-- Mappings
-- -----------------------------------------------------------------------------

vim.keymap.set('n', '`b', ':Telescope buffers<cr>')
vim.keymap.set('n', '`g', ':Telescope git_files<cr>')
vim.keymap.set('n', '`f', ':Telescope find_files<cr>')
vim.keymap.set('n', '`r', ':Telescope grep_string only_sort_text=true search=<cr>')
vim.keymap.set('n', '``', () -> telescope_builtin.find_files({
  cwd = '~',
  search_dirs = { 'dots', 'repos' },
  find_command = { 'fd', '--type', 'f', '--type', 'd' },
}))
