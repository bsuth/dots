module function get_visual_selection() {
  -- Do not use '> and '< registers in getpos! These registers are only updated
  -- _after_ leaving visual mode.
  -- @see https://github.com/neovim/neovim/pull/13896#issuecomment-774680224
  local _, line_start, column_start = unpack(vim.fn.getpos('v'))
  local _, line_end, column_end = unpack(vim.fn.getcurpos())

  local lines = vim.fn.getline(line_start, line_end)
  vim.fn.setpos('.', { { 0, line_start, column_start, 0 } })

  if #lines == 1 {
    lines[1] = lines[1]:sub(column_start, column_end)
  } elseif #lines > 1 {
    lines[1] = lines[1]:sub(column_start)
    lines[#lines] = lines[#lines]:sub(1, column_end)
  }

  return table.concat(lines, '\n')
}

module function get_buffer_dir(buffer) {
  local buffer_name = vim.api.nvim_buf_get_name(buffer)

  -- Remove any buffer prefixes
  buffer_name = buffer_name:gsub('^%a+://', '')

  return vim.fn.fnamemodify(buffer_name, ':p:h')
}

module function edit(file = '') {
  -- When calling `:edit` from autocommands, it seems like Neovim fails to
  -- properly "setup" the file. For example, the filetype will not be set and
  -- `BufEnter` events will fail to fire.
  --
  -- To fix this, we edit the file immediately, then update it on Neovim's next
  -- tick to ensure the buffer is setup properly.
  --
  -- TODO: Report this to Neovim? Not sure if this is a bug...
  vim.cmd("edit {file}")
  vim.defer_fn(() -> vim.cmd("edit {file}"), 0)
}
