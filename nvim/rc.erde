require('utils.stdlib').load()

local { edit } = require('utils.vim')

-- -----------------------------------------------------------------------------
-- Settings
-- -----------------------------------------------------------------------------

-- core
vim.g.mapleader = ' '
vim.api.nvim_create_augroup('bsuth', {})

-- casing
vim.opt.ignorecase = true
vim.opt.smartcase = true

-- splitting
vim.opt.splitright = true
vim.opt.splitbelow = true

-- tabs
vim.opt.tabstop = 2
vim.opt.softtabstop = 2
vim.opt.shiftwidth = 2
vim.opt.expandtab = true

-- interface
vim.opt.termguicolors = true
vim.opt.number = false
vim.opt.signcolumn = 'yes'
vim.opt.showmode = false
vim.opt.synmaxcol = 300 -- limit for performance
vim.opt.laststatus = 3
vim.opt.colorcolumn = '80'
vim.cmd('highlight ColorColumn guibg=#585858')

-- misc
vim.opt.wrap = false
vim.opt.clipboard = 'unnamedplus'
vim.opt.updatetime = 300
vim.opt.scrollback = 100000
vim.opt.commentstring = '//%s'

-- -----------------------------------------------------------------------------
-- Mappings
-- -----------------------------------------------------------------------------

-- vimrc
vim.keymap.set('n', '<leader>ev', () -> edit('~/dots/nvim'))
vim.keymap.set('n', '<leader>sv', ':source $MYVIMRC<cr>')

-- write, quit
vim.keymap.set('n', '<c-w>', ':write<cr>')
vim.keymap.set('n', '<c-q>', ':quit<cr>')

-- clear search highlighting
vim.keymap.set('n', '<leader>/', ':nohlsearch<cr><c-l>')

-- refresh syntax highlighting
vim.keymap.set('n', '<leader>syn', ':syntax clear | syntax reset | syntax enable<cr>')

-- yanking
vim.keymap.set('n', 'YY', '"ayy')
vim.keymap.set('n', 'YP', '"ap')

-- command open
vim.keymap.set('c', '<c-space>', '<c-f>')

-- quick links
vim.keymap.set('n', '<leader>swp', () -> edit('~/.local/share/nvim/swap'))

-- remove annoying default map of K to manual
vim.keymap.set('n', 'K', () -> nil)

-- remove annoying default map of backgrounding neovim
vim.keymap.set('n', '<c-z>', () -> nil)

-- -----------------------------------------------------------------------------
-- Plugins / Modules
-- -----------------------------------------------------------------------------

function load(name) {
  package.loaded[name] = nil -- unset to force reloading
  require(name)
}

-- core
load('plugins.packer')
require('packer').use('nvim-lua/plenary.nvim')
local packer = require('packer')

-- ide
load('plugins.onedark')
load('plugins.treesitter')
load('plugins.mason') -- must come before plugins.lsp!
load('plugins.cmp') -- must come before plugins.lsp!
load('plugins.lsp')
load('plugins.formatter')

-- utils
packer.use('matze/vim-move')
load('plugins.sneak')
packer.use('tpope/vim-surround')
packer.use('tpope/vim-abolish')
packer.use('tpope/vim-repeat')
packer.use('tpope/vim-speeddating')
load('plugins.commentary')
load('plugins.suda')

-- ui
load('plugins.dirvish')
load('plugins.fugitive')
load('plugins.telescope')
load('plugins.lualine')

-- languages
load('plugins.go')
packer.use('peterhoeg/vim-qml')
packer.use('tridactyl/vim-tridactyl')

-- local plugins
packer.use('~/repos/vim-erde')
packer.use('~/repos/emacs-bindings.nvim')

-- -----------------------------------------------------------------------------
-- Modules
-- -----------------------------------------------------------------------------

load('modules.buffer_history')
load('modules.search_visual')
load('modules.surround_jump')
load('modules.terminal')
load('modules.tidy')
load('modules.track_cwd')
load('modules.windows')
pcall(() -> load('modules.work'))
