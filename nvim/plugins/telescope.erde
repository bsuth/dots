local C = require('constants')
local packer = require('packer')

packer.use('nvim-telescope/telescope.nvim')
packer.use({ 'nvim-telescope/telescope-fzf-native.nvim', run = 'make' })

local telescope = require('telescope')
local telescope_config = require('telescope.config')
local telescope_pickers = require('telescope.pickers')
local telescope_finders = require('telescope.finders')
local telescope_previewers = require('telescope.previewers')
local telescope_actions = require('telescope.actions')
local telescope_actions_set = require('telescope.actions.set')
local telescope_actions_state = require('telescope.actions.state')

telescope.setup({
  defaults = {
    layout_strategy = 'flex',
    layout_config = {
      flex = {
        flip_columns = 150,
      },
    },
    mappings = {
      i = {
        ['<c-space>'] = telescope_actions.toggle_selection,
        ['<m-space>'] = telescope_actions.send_selected_to_qflist + telescope_actions.open_qflist,
      },
      n = {
        ['<c-space>'] = telescope_actions.toggle_selection,
        ['<m-space>'] = telescope_actions.send_selected_to_qflist + telescope_actions.open_qflist,
      },
    },
  },
  pickers = {
    buffers = {
      mappings = {
        i = {
          ['<c-q>'] = telescope_actions.delete_buffer,
        },
        n = {
          ['<c-q>'] = telescope_actions.delete_buffer,
        },
      },
    },
  },
})

telescope.load_extension('fzf')

-- -----------------------------------------------------------------------------
-- Helpers
-- -----------------------------------------------------------------------------

function fd_job(flags) {
  return vim.list_extend({
    'fd',
    '--follow',
    '--exclude',
    'go',
    '--exclude',
    'bin',
  }, flags)
}

function run(cwd, job, opts) {
  return telescope_pickers.new(opts, {
    finder = telescope_finders.new_oneshot_job(job, { cwd = cwd }),
    previewer = telescope_previewers.vim_buffer_cat.new({ cwd = cwd }),
    sorter = telescope_config.values.generic_sorter(),
    attach_mappings = (prompt_bufnr, map) -> {
      -- Default select does not consider cwd from finder
      telescope_actions_set.select:replace(() -> {
        local selection = telescope_actions_state.get_selected_entry().value
        telescope_actions.close(prompt_bufnr)
        vim.cmd('edit ' .. cwd .. '/' .. selection)
      })

      return true
    },
  }):find()
}

-- -----------------------------------------------------------------------------
-- Mappings
-- -----------------------------------------------------------------------------

vim.keymap.set('n', '<leader><leader>', () -> run(os.getenv('HOME'), { C.FD_FAVORITES_PATH }, { prompt_title = 'Favorites' }))
vim.keymap.set('n', '<leader>fd', () -> run('.', fd_job({ '--type', 'f' }), { prompt_title = 'fd' }))
vim.keymap.set('n', '<leader>cd', () -> run('.', fd_job({ '--type', 'd' }), { prompt_title = 'cd' }))
vim.keymap.set('n', '<leader>rg', ':Telescope grep_string only_sort_text=true search=<cr>')
vim.keymap.set('n', '<leader>buf', ':Telescope buffers<cr>')
