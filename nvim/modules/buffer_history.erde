local C = require('constants')

local buffer_history = {}
local buffer_history_pointer = 0
local ignore_buf_enter = false

function is_blacklist_buffer(buffer) {
  local filetype = vim.api.nvim_buf_get_option(buffer, 'filetype')
  for _, blacklisted in ipairs(C.BUFFER_HISTORY_FILETYPE_BLACKLIST) {
    if filetype == blacklisted {
      return true
    }
  }
}

function history_back() {
  for i = buffer_history_pointer, 1, -1 {
    if #vim.fn.win_findbuf(buffer_history[i]) == 0 {
      ignore_buf_enter = true
      buffer_history_pointer = i
      vim.api.nvim_win_set_buf(0, buffer_history[i])
      break
    }
  }
}

function history_forward() {
  for i = buffer_history_pointer, #buffer_history {
    if #vim.fn.win_findbuf(buffer_history[i]) == 0 {
      ignore_buf_enter = true
      buffer_history_pointer = i
      vim.api.nvim_win_set_buf(0, buffer_history[i])
      break
    }
  }
}

function history_remove(buffer) {
  for i, history_buffer in ipairs(buffer_history) {
    if history_buffer == buffer {
      table.remove(buffer_history, i)
      buffer_history_pointer = math.min(buffer_history_pointer, #buffer_history)
      break
    }
  }
}

function history_push(buffer) {
  history_remove(buffer)

  for i = #buffer_history, buffer_history_pointer + 1, -1 {
    table.remove(buffer_history)
  }

  table.insert(buffer_history, buffer)
  buffer_history_pointer += 1
}

vim.api.nvim_create_autocmd('BufEnter', {
  group = 'bsuth',
  callback = () -> {
    local buffer = vim.api.nvim_get_current_buf()
    if ignore_buf_enter {
      ignore_buf_enter = false
    } elseif !is_blacklist_buffer(buffer) {
      history_push(buffer)
    }
  },
})

vim.api.nvim_create_autocmd('FileType', {
  group = 'bsuth',
  callback = () -> {
    local buffer = vim.api.nvim_get_current_buf()
    if is_blacklist_buffer(buffer) {
      history_remove(buffer)
    }
  },
})

vim.api.nvim_create_autocmd('BufWipeout', {
  group = 'bsuth',
  callback = () -> history_remove(vim.api.nvim_get_current_buf()),
})

vim.keymap.set('n', '<m-o>', history_back)
vim.keymap.set('n', '<m-i>', history_forward)
