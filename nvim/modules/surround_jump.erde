local SURROUND_CHARS = {
  ['('] = true,
  [')'] = true,
  ['{'] = true,
  ['}'] = true,
  ['['] = true,
  [']'] = true,
}

local FORWARD_SURROUND_CHARS = {
  ['('] = true,
  ['{'] = true,
  ['['] = true,
}

local BACK_SURROUND_CHARS = {
  [')'] = true,
  ['}'] = true,
  [']'] = true,
}

-- TODO: improve compatability with jump list
function surround_jump_back() {
  local _, charline, charcol = unpack(vim.fn.getcurpos())
  local line = vim.fn.getline(charline)
  local char = line:sub(charcol, charcol)

  repeat {
    if charcol > 1 {
      charcol -= 1
      char = line:sub(charcol, charcol)
    } elseif charline > 1 {
      charline -= 1
      line = vim.fn.getline(charline)
      charcol = #line
      char = line:sub(charcol, charcol)
    } else {
      return -- no surrounds
    }
  } until SURROUND_CHARS[char]

  vim.fn.setcursorcharpos(charline, charcol)

  if BACK_SURROUND_CHARS[char] {
    vim.cmd('normal %')
  }
}

-- TODO: improve compatability with jump list
function surround_jump_forward() {
  local _, charline, charcol = unpack(vim.fn.getcurpos())
  local line = vim.fn.getline(charline)
  local char = line:sub(charcol, charcol)

  local lastline = vim.fn.line('$')
  local lastcol = #line

  repeat {
    if charcol < lastcol {
      charcol += 1
      char = line:sub(charcol, charcol)
    } elseif charline < lastline {
      charline += 1
      line = vim.fn.getline(charline)
      charcol = 1
      char = line:sub(charcol, charcol)
      lastcol = #line
    } else {
      return -- no surrounds
    }
  } until SURROUND_CHARS[char]

  vim.fn.setcursorcharpos(charline, charcol)

  if FORWARD_SURROUND_CHARS[char] {
    vim.cmd('normal %')
  }
}

vim.keymap.set('n', ')', surround_jump_forward)
vim.keymap.set('v', ')', surround_jump_forward)
vim.keymap.set('n', '(', surround_jump_back)
vim.keymap.set('v', '(', surround_jump_back)
