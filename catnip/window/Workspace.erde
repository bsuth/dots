local tile = require('window.tile')
local Class = require('utils.Class')
local { get_box_proximity, swap_boxes } = require('utils.bounds')

local Workspace = Class()

-- -----------------------------------------------------------------------------
-- Private
-- -----------------------------------------------------------------------------

function Workspace:_init(box) {
  self.box = box
  self.windows = {}
  self.visible = true
}

function Workspace:_on_change_visible(new_visible) {
  for _, window in ipairs(self.windows) {
    window.visible = new_visible
  }
}

-- -----------------------------------------------------------------------------
-- Public
-- -----------------------------------------------------------------------------

function Workspace:add(window) {
  table.insert(self.windows, window)
  tile(self.box, self.windows)
}

function Workspace:remove(window) {
  local _, window_index = table.find(self.windows, window)

  if window_index == nil {
    return
  }

  table.remove(self.windows, window_index)
  tile(self.box, self.windows)
}

function Workspace:get_relative_window(source_window, direction) {
  local relative_window = nil
  local relative_window_index = nil
  local relative_window_proximity = nil

  for i, window in ipairs(self.windows) {
    local proximity = get_box_proximity(source_window, window, direction)

    if proximity && (!relative_window_proximity || proximity < relative_window_proximity) {
      relative_window = window
      relative_window_index = i
      relative_window_proximity = proximity
    }
  }

  return relative_window, relative_window_index
}

function Workspace:swap_relative_window(source_window, direction) {
  local _, source_window_index = table.find(self.windows, source_window)

  if source_window_index == nil {
    return
  }

  local relative_window, relative_window_index = self:get_relative_window(source_window, direction)

  if relative_window == nil {
    return
  }

  swap_boxes(source_window, relative_window)
  self.windows[relative_window_index] = source_window
  self.windows[source_window_index] = relative_window
}

-- -----------------------------------------------------------------------------
-- Return
-- -----------------------------------------------------------------------------

return Workspace
