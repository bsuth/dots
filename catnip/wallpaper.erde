local catnip = require('catnip')

local wallpapers = {}

local function render_wallpaper_canvas(wallpaper) {
  local { output, canvas } = wallpaper

  canvas:clear()

  canvas:svg('wallpaper.svg', {
    x = output.x,
    y = output.y,
    width = output.width,
    height = output.height,
  })
}

local function create_wallpaper(output) {
  local wallpaper = {
    output = output,
    canvas = catnip.canvas({
      x = output.x,
      y = output.y,
      width = output.width,
      height = output.height,
    }),
  }

  -- TODO: ensure the wallpaper is always in the back
  render_wallpaper_canvas(wallpaper)
  table.insert(wallpapers, wallpaper)
}

catnip.subscribe('output::destroy', output -> {
  wallpapers = table.filter(wallpapers, wallpaper -> wallpaper.output != output)
})

do {
  catnip.subscribe('output::create', create_wallpaper)

  for output in catnip.outputs {
    create_wallpaper(output)
  }
}
