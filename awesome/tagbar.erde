local awful = require('awful')
local gears = require('gears')
local wibox = require('wibox')
local { globalKeys } = require('core.bindings')
local { palette } = require('core.theme')

local TAGBAR_HEIGHT = 48
local TAGBAR_FONT = 'Quicksand Regular 14'

-- -----------------------------------------------------------------------------
-- Helpers
-- -----------------------------------------------------------------------------

function getCurrentTagbar() {
  return awful.screen.focused().tagbar
}

-- -----------------------------------------------------------------------------
-- Components
-- -----------------------------------------------------------------------------

local TAG_RENAME_PROMPT = awful.widget.prompt({
  prompt = '',
  font = TAGBAR_FONT,
  fg = palette.white,
  done_callback = () -> getCurrentTagbar():refresh(),
  exe_callback = newTagName -> {
    if #newTagName > 0 {
      awful.screen.focused().selected_tag.name = newTagName
    }
  },
})

local Tab = props -> wibox.widget({
  {
    props.useRenamePrompt && TAG_RENAME_PROMPT || {
      text = props.tag.name,
      halign = 'center',
      valign = 'center',
      font = TAGBAR_FONT,
      widget = wibox.widget.textbox,
    },
    widget = wibox.container.place,
  },
  fg = props.tag.tagbarDisabled && '#888888' || palette.white,
  bg = props.tag.selected && palette.lightGray || palette.darkGray,
  widget = wibox.container.background,
})

-- -----------------------------------------------------------------------------
-- Tagbar
-- -----------------------------------------------------------------------------

local Tagbar = {}

function Tagbar:open() {
  awful.tag.add(tostring(#self.screen.tags), {
    screen = self.screen,
    layout = awful.layout.layouts[1]
  }):view_only()
}

function Tagbar:close() {
  local numVisibleTags = 0

  for _, tag in ipairs(self.screen.tags) {
    if !tag.name:match('^_') {
      numVisibleTags += 1
    }
  }

  if numVisibleTags > 1 {
    self.screen.selected_tag:delete()
  }
}

function Tagbar:rename() {
  TAG_RENAME_PROMPT:run()
  self:refresh(true)
}

function Tagbar:toggle() {
  local tag = self.screen.selected_tag
  tag.tagbarDisabled = !tag.tagbarDisabled
  self:refresh()
}

function Tagbar:move(forwards = true) {
  local selectedTag = self.screen.selected_tag
  local increment = forwards && 1 || -1
  local limit = forwards && #self.screen.tags || 1

  for i = selectedTag.index + increment, limit, increment {
    local swapTag = self.screen.tags[i]
    if !swapTag.name:match('^_.*') {
      selectedTag:swap(swapTag)
      self:refresh()
      break
    }
  }
}

function Tagbar:focus(forwards = true, skipDisabled = true) {
  local increment = forwards && 1 || -1
  local newTagIndex = self.screen.selected_tag.index
  local numTags = #self.screen.tags

  repeat {
    newTagIndex = forwards
      && newTagIndex % numTags + 1
      || (newTagIndex - 2) % numTags + 1

    local newTag = self.screen.tags[newTagIndex]
    if !(skipDisabledTags && newTag.tagbarDisabled) && !newTag.name:match('^_.*') {
      newTag:view_only()
      return
    }
  } until newTagIndex == self.screen.selected_tag.index
}

function Tagbar:refresh(useRenamePrompt = false) {
  local children = {}

  for _, tag in pairs(self.screen.tags) {
    if !tag.name:match('^_') {
      children[#children + 1] = Tab({
        tag = tag,
        useRenamePrompt = useRenamePrompt && tag == self.screen.selected_tag,
      })
    }
  }

  self.tabListWidget.children = children
}

-- -----------------------------------------------------------------------------
-- Setup
-- -----------------------------------------------------------------------------

gears.table.merge(globalKeys, {
  awful.key({ 'Mod4' }, 't', () -> getCurrentTagbar():open()),
  awful.key({ 'Mod4' }, 'w', () -> getCurrentTagbar():close()),
  awful.key({ 'Mod4', 'Shift' }, ',', () -> getCurrentTagbar():move(false)),
  awful.key({ 'Mod4', 'Shift' }, '.', () -> getCurrentTagbar():move()),
  awful.key({ 'Mod4' }, 'Tab', () -> getCurrentTagbar():focus()),
  awful.key({ 'Mod4', 'Shift' }, 'Tab', () -> getCurrentTagbar():focus(false)),
  awful.key({ 'Mod4', 'Control' }, 'Tab', () -> getCurrentTagbar():focus(true, false)),
  awful.key({ 'Mod4', 'Control', 'Shift' }, 'Tab', () -> getCurrentTagbar():focus(false, false)),
  awful.key({ 'Mod4', 'Shift' }, 't', () -> getCurrentTagbar():rename()),
  awful.key({ 'Mod4', 'Control' }, 't', () -> getCurrentTagbar():toggle()),
})

awful.screen.connect_for_each_screen(s -> {
  local tagbar = {
    screen = s,
    tabListWidget = wibox.widget({
      forced_width = s.geometry.width,
      layout  = wibox.layout.flex.horizontal,
    }),
  }

  local wibar = awful.wibar({
    screen = s,
    position = 'top',
    bg = palette.darkGray,
    height = TAGBAR_HEIGHT,
    type = 'dock', -- remove box shadows
    widget = tagbar.tabListWidget,
  })

  s.tagbar = tagbar
  s:connect_signal('tag::history::update', () -> tagbar:refresh())
  setmetatable(tagbar, { __index = Tagbar })
})
