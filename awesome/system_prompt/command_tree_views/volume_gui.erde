local wibox = require('wibox')
local { palette } = require('core.theme')
local models = require('models')
local Slider = require('components.Slider')
local Object = require('utils.Object')
local svg = require('utils.svg')

local volume_gui_view = {}

function volume_gui_view:_init() {
  self._text_widget = wibox.widget({
    font = 'Quicksand Bold 16',
    widget = wibox.widget.textbox,
  })

  self:_update_text()
  models.volume:subscribe('change_percent', () -> self:_update_text())

  self._icon_widget = wibox.widget({
    forced_width = 48,
    forced_height = 48,
    widget = wibox.widget.imagebox,
  })

  self:_update_icon()
  models.volume:subscribe('change_active', () -> self:_update_icon())

  self._slider = Slider({
    keybindings = {
      { {}, ' ', () -> models.volume:toggle() },
    },
    widget = wibox.widget({
      {
        self._icon_widget,
        widget = wibox.container.place,
      },
      {
        self._text_widget,
        widget = wibox.container.place,
      },
      spacing = 8,
      layout = wibox.layout.fixed.vertical,
    }),
  })

  self._slider:subscribe('stop', () -> self:publish('stop'))
  self._slider:subscribe('up', () -> { models.volume.percent += 5 })
  self._slider:subscribe('down', () -> { models.volume.percent -= 5 })
  self._slider:subscribe('page_up', () -> { models.volume.percent += 8 })
  self._slider:subscribe('page_down', () -> { models.volume.percent -= 8 })
  self._slider:subscribe('min', () -> { models.volume.percent = 0 })
  self._slider:subscribe('max', () -> { models.volume.percent = 100 })

  self.root_widget = wibox.widget({
    self._slider.root_widget,
    widget = wibox.container.place,
  })
}

function volume_gui_view:_update_text() {
  self._text_widget.text = "{ models.volume.percent }%"
}

function volume_gui_view:_update_icon() {
  self._icon_widget.image = models.volume.active
    && svg('volume-active', palette.white)
    || svg('volume-inactive', palette.white)
}

function volume_gui_view:start() {
  self._slider:start()
}

return Object(volume_gui_view)
