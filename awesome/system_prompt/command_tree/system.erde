local awful = require('awful')
local { ENV_HOME } = require('constants')
local { save_screen_state } = require('core.screen')

-- -----------------------------------------------------------------------------
-- System Tree
-- -----------------------------------------------------------------------------

local system_tree = {
  label = 'system',
  {
    label = 'sleep',
    type = 'once',
    callback = () -> {
      save_screen_state()
      awful.spawn('systemctl suspend')
    }
  },
  {
    label = 'lock',
    type = 'once',
    callback = () -> awful.spawn('slock'),
    callback = () -> {
      save_screen_state()
      awful.spawn('slock')
    }
  },
  {
    label = 'quit',
    type = 'once',
    callback = () -> awesome.quit(),
  },
  {
    label = 'reboot',
    type = 'once',
    callback = () -> {
      save_screen_state()
      awful.spawn('/sbin/reboot')
    }
  },
  {
    label = 'restart',
    type = 'once',
    callback = () -> awesome.restart(),
  },
  {
    label = 'poweroff',
    type = 'once',
    callback = () -> {
      save_screen_state()
      awful.spawn('/sbin/poweroff')
    }
  },
}

-- -----------------------------------------------------------------------------
-- Screen Layout
-- -----------------------------------------------------------------------------

for _, layout in ipairs({ 'single', 'double', 'triple' }) {
  local layout_script = "{ ENV_HOME }/.screenlayout/{ layout }.sh"

  if io.exists(layout_script) {
    table.insert(system_tree, {
      label = layout,
      type = 'once',
      callback = () -> awful.spawn(layout_script),
    })
  }
}

-- -----------------------------------------------------------------------------
-- Return
-- -----------------------------------------------------------------------------

return system_tree
